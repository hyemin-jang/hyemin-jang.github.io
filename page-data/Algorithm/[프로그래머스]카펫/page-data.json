{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/[프로그래머스]카펫/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","author":"[hyem]","siteUrl":"https://hyemin-jang.github.io","comment":{"disqusShortName":"","utterances":"hyemin-jang/hyemin-jang.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"bfb5dcdf-d6f9-53ad-979d-2e329dcbac98","excerpt":"문제 문제 설명 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다. Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다. Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의 수 yellow가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution…","html":"<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p><strong>문제 설명</strong></p>\n<p>Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.</p>\n<p>Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.</p>\n<p>Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의 수 yellow가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<p><strong>제한사항</strong></p>\n<p>갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.\n노란색 격자의 수 yellow는 1 이상 2,000,000 이하인 자연수입니다.\n카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.</p>\n<p><strong>입출력 예</strong></p>\n<table>\n<thead>\n<tr>\n<th>brown</th>\n<th>yellow</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>2</td>\n<td>[4, 3]</td>\n</tr>\n<tr>\n<td>8</td>\n<td>1</td>\n<td>[3, 3]</td>\n</tr>\n<tr>\n<td>24</td>\n<td>24</td>\n<td>[8, 6]</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"풀이과정\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EA%B3%BC%EC%A0%95\" aria-label=\"풀이과정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이과정</h2>\n<p>완전탐색으로 풀었다.\n일단 전체 넓이를 만들 수 있는 경우의 수들 = <code class=\"language-text\">약수</code>들을 구해놓고,\n반복문 돌면서 해당 숫자가 yellow를 만들 수 있는 경우인지 살펴보면 된다.</p>\n<blockquote>\n<p>💡 숫자 n의 약수를 구할 때는 1부터 n까지 다 살펴볼 필요 없이 <code class=\"language-text\">n의 제곱근</code>까지만 구하면 된다. </p>\n</blockquote>\n<h2 id=\"완성-코드\" style=\"position:relative;\"><a href=\"#%EC%99%84%EC%84%B1-%EC%BD%94%EB%93%9C\" aria-label=\"완성 코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완성 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>brown<span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    total <span class=\"token operator\">=</span> brown <span class=\"token operator\">+</span> yellow\n    divisors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> total <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            divisors<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>  \n            \n    <span class=\"token keyword\">for</span> height <span class=\"token keyword\">in</span> divisors<span class=\"token punctuation\">:</span>\n        width <span class=\"token operator\">=</span> total <span class=\"token operator\">//</span> height\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> yellow<span class=\"token punctuation\">:</span>\n            retrun <span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">]</span>         \n            </code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/Algorithm/%5B%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%5D%EC%B9%B4%ED%8E%AB/#%EB%AC%B8%EC%A0%9C\">문제</a></li>\n<li><a href=\"/Algorithm/%5B%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%5D%EC%B9%B4%ED%8E%AB/#%ED%92%80%EC%9D%B4%EA%B3%BC%EC%A0%95\">풀이과정</a></li>\n<li><a href=\"/Algorithm/%5B%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%5D%EC%B9%B4%ED%8E%AB/#%EC%99%84%EC%84%B1-%EC%BD%94%EB%93%9C\">완성 코드</a></li>\n</ul>","frontmatter":{"title":"[프로그래머스] 카펫 (파이썬)","date":"July 31, 2021"}}},"pageContext":{"slug":"/Algorithm/[프로그래머스]카펫/","previous":{"fields":{"slug":"/Algorithm/[백준]10816/"},"frontmatter":{"title":"[백준] 10816 - 숫자카드2 (파이썬)"}},"next":{"fields":{"slug":"/Algorithm/[프로그래머스]모의고사/"},"frontmatter":{"title":"[프로그래머스] 모의고사 (파이썬)"}}}}}