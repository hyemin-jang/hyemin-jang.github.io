{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/[프로그래머스]가장먼노드/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","author":"[hyem]","siteUrl":"https://hyemin-jang.github.io","comment":{"disqusShortName":"","utterances":"hyemin-jang/hyemin-jang.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"9ce23058-afcb-5810-976c-4e16aca54bb7","excerpt":"문제 문제 링크 풀이 백준 18352번(특정 거리의 도시 찾기) 문제를 풀고 나니 이 문제는 거의 똑같아서 쉬웠다! 이 문제 역시 모든 간선의 거리가 1로 동일하기 때문에 BFS 알고리즘으로 풀이가 가능했다. 다만 그래프를 만들 때 양방향 연결이라는 것만 주의하면 된다.","html":"<h1 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/49189\">문제 링크</a></p>\n<h1 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h1>\n<p><a href=\"https://hyemin-jang.github.io/Algorithm/%5B%EB%B0%B1%EC%A4%80%5D18352/\">백준 18352번(특정 거리의 도시 찾기)</a> 문제를 풀고 나니 이 문제는 거의 똑같아서 쉬웠다!</p>\n<p>이 문제 역시 <strong>모든 간선의 거리가 1로 동일</strong>하기 때문에 BFS 알고리즘으로 풀이가 가능했다.</p>\n<p>다만 그래프를 만들 때 양방향 연결이라는 것만 주의하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    graph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> vertex<span class=\"token punctuation\">:</span>\n        graph<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        graph<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 양방향 연결</span>\n\n    deq <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n    <span class=\"token keyword\">while</span> deq<span class=\"token punctuation\">:</span>\n        now <span class=\"token operator\">=</span> deq<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token builtin\">next</span> <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> values<span class=\"token punctuation\">[</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                values<span class=\"token punctuation\">[</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n                deq<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">)</span>\n\n    m <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> values<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/Algorithm/%5B%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%5D%EA%B0%80%EC%9E%A5%EB%A8%BC%EB%85%B8%EB%93%9C/#%EB%AC%B8%EC%A0%9C\">문제</a></li>\n<li><a href=\"/Algorithm/%5B%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%5D%EA%B0%80%EC%9E%A5%EB%A8%BC%EB%85%B8%EB%93%9C/#%ED%92%80%EC%9D%B4\">풀이</a></li>\n</ul>","frontmatter":{"title":"[프로그래머스] 가장 먼 노드 (파이썬)","date":"October 26, 2021"}}},"pageContext":{"slug":"/Algorithm/[프로그래머스]가장먼노드/","previous":{"fields":{"slug":"/Algorithm/[백준]18352/"},"frontmatter":{"title":"[백준] 18352번 - 특정 거리의 도시 찾기 (파이썬)"}},"next":null}}}