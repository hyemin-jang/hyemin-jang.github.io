{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/완전탐색,이분탐색/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","author":"[hyem]","siteUrl":"https://hyemin-jang.github.io","comment":{"disqusShortName":"","utterances":"hyemin-jang/hyemin-jang.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"f9b2e70e-633f-54a4-8251-72772c864417","excerpt":"1. 탐색 : 많은 데이터 속에서 원하는 데이터를 찾는 것. 완전탐색 이분탐색 깊이우선탐색 너비우선탐색 문자열탐색, KMP, BM 등등.. 1) 완전탐색 (Brute Force) 컴퓨터의 빠른 계산 능력을 이용하여 가능한 모든 경우의 수를 탐색 무조건 답을 구하지만, 효율성이 가장 좋지 않은 알고리즘 ✅ 예) 카드들이 들어있는 리스트 에서 8번 카드를 찾기 (1) 반복문 사용 (2) 재귀함수 사용 2) 이분탐색 (Binary Search…","html":"<h1 id=\"1-탐색\" style=\"position:relative;\"><a href=\"#1-%ED%83%90%EC%83%89\" aria-label=\"1 탐색 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 탐색</h1>\n<p>: 많은 데이터 속에서 원하는 데이터를 찾는 것.</p>\n<ul>\n<li>완전탐색</li>\n<li>이분탐색</li>\n<li>깊이우선탐색</li>\n<li>너비우선탐색</li>\n<li>문자열탐색, KMP, BM 등등..</li>\n</ul>\n<h2 id=\"1-완전탐색-brute-force\" style=\"position:relative;\"><a href=\"#1-%EC%99%84%EC%A0%84%ED%83%90%EC%83%89-brute-force\" aria-label=\"1 완전탐색 brute force permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 완전탐색 (Brute Force)</h2>\n<ul>\n<li>컴퓨터의 빠른 계산 능력을 이용하여 가능한 모든 경우의 수를 탐색</li>\n<li>무조건 답을 구하지만, 효율성이 가장 좋지 않은 알고리즘</li>\n</ul>\n<p>✅ 예) 카드들이 들어있는 리스트 <code class=\"language-text\">trump</code>에서 8번 카드를 찾기</p>\n<h3 id=\"1-반복문-사용\" style=\"position:relative;\"><a href=\"#1-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EC%82%AC%EC%9A%A9\" aria-label=\"1 반복문 사용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 반복문 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token keyword\">if</span> trump<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> i\n    <span class=\"token keyword\">return</span> i</code></pre></div>\n<h3 id=\"2-재귀함수-사용\" style=\"position:relative;\"><a href=\"#2-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9\" aria-label=\"2 재귀함수 사용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 재귀함수 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">,</span> loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> trump<span class=\"token punctuation\">[</span>loc<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token keyword\">return</span> loc\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token keyword\">return</span> solution<span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">,</span> loc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"2-이분탐색-binary-search\" style=\"position:relative;\"><a href=\"#2-%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89-binary-search\" aria-label=\"2 이분탐색 binary search permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 이분탐색 (Binary Search)</h2>\n<ul>\n<li><strong>정렬된 리스트</strong>에서 특정 값의 위치를 찾는 알고리즘</li>\n<li>중간값을 선택하여 찾고자 하는 값보다 큰지 작은지 비교</li>\n</ul>\n<p>✅ 아까와 같은 카드 8 찾기 - 이분탐색 이용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    right <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>trump<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    \n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left<span class=\"token operator\">+</span>right<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> trump<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> mid\n        <span class=\"token keyword\">elif</span> trump<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> trump<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n            right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> mid</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Algorithm/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89,%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89/#1-%ED%83%90%EC%83%89\">1. 탐색</a></p>\n<ul>\n<li>\n<p><a href=\"/Algorithm/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89,%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89/#1-%EC%99%84%EC%A0%84%ED%83%90%EC%83%89-brute-force\">1) 완전탐색 (Brute Force)</a></p>\n<ul>\n<li><a href=\"/Algorithm/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89,%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89/#1-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EC%82%AC%EC%9A%A9\">(1) 반복문 사용</a></li>\n<li><a href=\"/Algorithm/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89,%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89/#2-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9\">(2) 재귀함수 사용</a></li>\n</ul>\n</li>\n<li><a href=\"/Algorithm/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89,%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89/#2-%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89-binary-search\">2) 이분탐색 (Binary Search)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[Algorithm] 완전탐색/이분탐색","date":"July 30, 2021"}}},"pageContext":{"slug":"/Algorithm/완전탐색,이분탐색/","previous":{"fields":{"slug":"/Java/5.배열/"},"frontmatter":{"title":"[Java] 5. 배열"}},"next":{"fields":{"slug":"/Java/6.자바 자료구조/"},"frontmatter":{"title":"[Java] 6. 자바 자료구조 - ArrayList, Set, Map"}}}}}