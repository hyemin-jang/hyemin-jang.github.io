{"componentChunkName":"component---src-templates-blog-post-js","path":"/Python/[python]정규표현식-/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","author":"[hyem]","siteUrl":"https://hyemin-jang.github.io","comment":{"disqusShortName":"","utterances":"hyemin-jang/hyemin-jang.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"528e6d62-596b-558c-a47d-5de12d19ce17","excerpt":"정규표현식 1) 메타문자 원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용되는 문자 ✅ 문자클래스   :   사이의 문자들과 매치 예)  : a, b, c중 한 개의 문자와 매치 [ ] 안의 두 문자 사이에  사용 : 두 문자 사이의 범위 [ ] 안에  메타문자 사용:  반대(not)의 의미 표기법 의미 같은표현  숫자와 매치 0-9  숫자가 아닌것과 매치 [^0-9]  whitespace(공백) 문자와 매치 \\t\\n\\r\\f\\v  whiltespace 문자가 아닌것과 매치 [^\\t\\n\\r\\f\\v…","html":"<h1 id=\"정규표현식\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"정규표현식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규표현식</h1>\n<h2 id=\"1-메타문자\" style=\"position:relative;\"><a href=\"#1-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90\" aria-label=\"1 메타문자 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 메타문자</h2>\n<p>원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용되는 문자</p>\n<h3 id=\"-문자클래스\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%9E%90%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\" 문자클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 문자클래스 [ ]</h3>\n<p>:  <strong><code class=\"language-text\">[]</code> 사이의 문자들과 매치</strong></p>\n<ul>\n<li>예) <code class=\"language-text\">[abc]</code> : a, b, c중 한 개의 문자와 매치</li>\n<li>[ ] 안의 두 문자 사이에 <code class=\"language-text\">하이픈(-)</code> 사용 : 두 문자 사이의 범위</li>\n<li>[ ] 안에 <code class=\"language-text\">^</code> 메타문자 사용:  <strong>반대(not)</strong>의 의미</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>표기법</th>\n<th>의미</th>\n<th>같은표현</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">\\d</code></td>\n<td>숫자와 매치</td>\n<td>[0-9]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\D</code></td>\n<td>숫자가 아닌것과 매치</td>\n<td>[^0-9]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\s</code></td>\n<td>whitespace(공백) 문자와 매치</td>\n<td>[\\t\\n\\r\\f\\v]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\S</code></td>\n<td>whiltespace 문자가 아닌것과 매치</td>\n<td>[^\\t\\n\\r\\f\\v]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\w</code></td>\n<td>문자+숫자와 매치</td>\n<td>[a-zA-Z0-9]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\\W</code></td>\n<td>문자가 아닌 것과 매치</td>\n<td>[^a-zA-Z0-9]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"-횟수-위치-및-그룹\" style=\"position:relative;\"><a href=\"#-%ED%9A%9F%EC%88%98-%EC%9C%84%EC%B9%98-%EB%B0%8F-%EA%B7%B8%EB%A3%B9\" aria-label=\" 횟수 위치 및 그룹 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 횟수, 위치 및 그룹</h3>\n<table>\n<thead>\n<tr>\n<th>표기법</th>\n<th>의미</th>\n<th>예제</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">*</code></td>\n<td>0회 이상 반복</td>\n<td><code class=\"language-text\">ca*t</code>  : ct, cat, caaaaat, … 등등</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">+</code></td>\n<td>1회 이상 반복</td>\n<td><code class=\"language-text\">ca+t</code>  : cat, caaaaat, … 등등</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">?</code></td>\n<td>0회 또는 1회 (존재하거나 존재하지 않거나)</td>\n<td><code class=\"language-text\">ca?t</code> : ct, cat</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">{m}</code></td>\n<td>m회 반복</td>\n<td><code class=\"language-text\">ca{3}t</code>  : caaat</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">{m,n}</code></td>\n<td>m회부터 n회까지 반복</td>\n<td><code class=\"language-text\">ca{2,3}t</code>  : caat, caaat</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">.</code></td>\n<td>줄바꿈 문자를 제외한 모든 문자 (1개의 임의의 문자)</td>\n<td><code class=\"language-text\">c.t</code>  : cat, cbt, … 등등</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">^</code></td>\n<td>^ 뒤의 문자로 시작됨 <strong>(주의: ^가 [] 안에 쓰이면 not의 의미)</strong></td>\n<td><code class=\"language-text\">^cats</code>  : cats and dogs are lovely</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">$</code></td>\n<td>$ 앞의 문자로 끝남</td>\n<td><code class=\"language-text\">cats$</code> : they are my cats</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">|</code></td>\n<td>또는</td>\n<td><code class=\"language-text\">c(a|b)t</code> : cat, cbt</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">()</code></td>\n<td>정규식을 그룹으로 묶음</td>\n<td>아래 참조</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">(?=)</code></td>\n<td>전방탐색 : ?= 뒤에 오는 문자를 기준으로  앞부분을 탐색</td>\n<td>아래 참조</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">(?&lt;=)</code></td>\n<td>후방탐색 :  ?&#x3C;= 뒤에 오는 문자를 기준으로 뒷부분을 탐색</td>\n<td>아래 참조</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-re모듈\" style=\"position:relative;\"><a href=\"#2-re%EB%AA%A8%EB%93%88\" aria-label=\"2 re모듈 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) re모듈</h2>\n<p>파이썬 내장 라이브러리로, <code class=\"language-text\">import re</code> 하여 사용한다.</p>\n<h3 id=\"-rematch정규표현식-검사할데이터\" style=\"position:relative;\"><a href=\"#-rematch%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B2%80%EC%82%AC%ED%95%A0%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\" rematch정규표현식 검사할데이터 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.match(‘정규표현식’, ‘검사할데이터’)</h3>\n<p>검증할 데이터의 <strong>시작 부분</strong>이 정규표현식에 부합되는지 검증</p>\n<p>정규표현식에 부합되면 <code class=\"language-text\">Match 객체</code>, 부합되지 않으면 <code class=\"language-text\">None</code>을 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 2), match='ab'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 1), match='1'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'356'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 1), match='3'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1a23'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># &lt;re.Match object; span=(0, 1), match='1'></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 0), match=''></span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'a+b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aaab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 4), match='aaab'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'a+b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aaab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'a?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 0), match=''></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'^[A-Z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 1), match='H'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'^[A-Z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None  </span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[^A-Z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'[^A-Z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 1), match='h'></span></code></pre></div>\n<h3 id=\"-research정규표현식-검사할데이터\" style=\"position:relative;\"><a href=\"#-research%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B2%80%EC%82%AC%ED%95%A0%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\" research정규표현식 검사할데이터 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.search(‘정규표현식’, ‘검사할데이터’)</h3>\n<p>검증할 데이터가 정규표현식에 부함되는 문자열을 <strong>포함</strong>하는지 검증</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(1, 3), match='ab'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ba ab'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(3, 5), match='ab'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]+$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'t13est0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(6, 7), match='0'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]+$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'\\*+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'\\*+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a*a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(1, 2), match='*'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'\\*+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'**'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 2), match='**'></span>\n\n<span class=\"token comment\"># \\*  : 앞에 역슬래쉬를 붙여서 메타문자로서의 *이 아니라 문자열 데이터로서의 * 의미</span></code></pre></div>\n<h3 id=\"-refindall정규표현식-찾을대상\" style=\"position:relative;\"><a href=\"#-refindall%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\" aria-label=\" refindall정규표현식 찾을대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.findall(‘정규표현식’, 찾을대상)</h3>\n<p>정규표현식에 부합하는 것을 모두 찾아 리스트로 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'2\\d{3}'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi 9234 hello 2345 ..bye 2456'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['2345', '2456']</span></code></pre></div>\n<h3 id=\"-resplit정규표현식-찾을대상\" style=\"position:relative;\"><a href=\"#-resplit%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\" aria-label=\" resplit정규표현식 찾을대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.split(‘정규표현식’, 찾을대상)</h3>\n<p>정규표현식에 부합하는 부분을 기준으로 문자열을 쪼개서 리스트로 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'2\\d{3}'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi 9234 hello 2345 ..bye 2456'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['hi 9234 hello ', ' ..bye ', '']</span>\n\ndata <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abaabca'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 세번째 파라미터 - 쪼갤 횟수 지정 (그 이상은 쪼개지지 않음)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ['', 'b', 'abca']</span></code></pre></div>\n<h3 id=\"-resub정규표현식-바꿀문자-찾을대상\" style=\"position:relative;\"><a href=\"#-resub%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EB%B0%94%EA%BF%80%EB%AC%B8%EC%9E%90-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\" aria-label=\" resub정규표현식 바꿀문자 찾을대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.sub(‘정규표현식’, ‘바꿀문자’, 찾을대상)</h3>\n<p>정규표현식에 부합하는 부분을 2번째 파라미터(바꿀 문자열)로 교체함</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'apple|orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'과일'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple 9234 orange 2345 data 26 test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 과일 9234 과일 2345 data 26 test</span></code></pre></div>\n<h3 id=\"-recompile정규표현식\" style=\"position:relative;\"><a href=\"#-recompile%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\" recompile정규표현식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ re.compile(‘정규표현식’)</h3>\n<p>정규표현식을  미리 객체로 만들어놓고 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+[.][^b]+'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 8), match='test.txt'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.bat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># None</span></code></pre></div>\n<h3 id=\"-정규표현식-그룹화-code-classlanguage-textcode-사용-예제\" style=\"position:relative;\"><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B7%B8%EB%A3%B9%ED%99%94-code-classlanguage-textcode-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-label=\" 정규표현식 그룹화 code classlanguage textcode 사용 예제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚡ 정규표현식 그룹화 <code class=\"language-text\">()</code> 사용 예제</h3>\n<p>(1) json 포맷의 데이터 <code class=\"language-text\">{&quot;name&quot; : &quot;bori&quot;}</code>를 xml 포맷 <code class=\"language-text\">&lt;name&gt;bori&lt;/name&gt;</code>으로 변경해보기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">result <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'({\\s*})\"(\\w+)\":\\s*\"(\\w+)\"(\\s*})'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;\\\\2>\\\\3&lt;/\\\\2>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'{\"name\" : \"bori\"}'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># \\\\2 : 그룹화한 것들 중 2번째 그룹을 나타냄</span></code></pre></div>\n<p>(2) 정규식 그룹에 이름 부여해보기 -  <code class=\"language-text\">(?P&lt;이름&gt;정규표현식)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span><span class=\"token string\">'(?P&lt;이름>\\w+)\\s(?P&lt;전화번호>\\d{3}-\\d{4}-\\d{4})'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'보리 010-1111-2222'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 보리 010-1111-2222</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 보리</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 보리</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 010-1111-2222</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token string\">'전화번호'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 010-1111-2222</span></code></pre></div>\n<h3 id=\"-전방탐색-code-classlanguage-textcode--후방탐색-code-classlanguage-textltcode-사용-예제\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EB%B0%A9%ED%83%90%EC%83%89-code-classlanguage-textcode--%ED%9B%84%EB%B0%A9%ED%83%90%EC%83%89-code-classlanguage-textltcode-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-label=\" 전방탐색 code classlanguage textcode  후방탐색 code classlanguage textltcode 사용 예제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚡ 전방탐색 <code class=\"language-text\">(?=)</code> , 후방탐색 <code class=\"language-text\">(?&lt;=)</code> 사용 예제</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'.+(?=:)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.google.com'</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\"># : 를 기준으로 앞부분에서 .+ 정규표현식에 부합하는 패턴을 포함하는지 검증</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># &lt;re.Match object; span=(0, 4), match='http'></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'(?&lt;=:)(//)(.+)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.google.com'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># : 를 기준으로 뒷부분에서 검증하되, //와 일치하는 부분과 .+와 일치하는 부분을 그룹화</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;re.Match object; span=(5, 21), match='//www.google.com'></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># //</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># www.google.com</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\">정규표현식</a></p>\n<ul>\n<li>\n<p><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#1-%EB%A9%94%ED%83%80%EB%AC%B8%EC%9E%90\">1) 메타문자</a></p>\n<ul>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-%EB%AC%B8%EC%9E%90%ED%81%B4%EB%9E%98%EC%8A%A4\">✅ 문자클래스  </a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-%ED%9A%9F%EC%88%98-%EC%9C%84%EC%B9%98-%EB%B0%8F-%EA%B7%B8%EB%A3%B9\">✅ 횟수, 위치 및 그룹</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#2-re%EB%AA%A8%EB%93%88\">2) re모듈</a></p>\n<ul>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-rematch%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B2%80%EC%82%AC%ED%95%A0%EB%8D%B0%EC%9D%B4%ED%84%B0\">✅ re.match(‘정규표현식’, ‘검사할데이터’)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-research%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B2%80%EC%82%AC%ED%95%A0%EB%8D%B0%EC%9D%B4%ED%84%B0\">✅ re.search(‘정규표현식’, ‘검사할데이터’)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-refindall%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\">✅ re.findall(‘정규표현식’, 찾을대상)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-resplit%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\">✅ re.split(‘정규표현식’, 찾을대상)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-resub%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EB%B0%94%EA%BF%80%EB%AC%B8%EC%9E%90-%EC%B0%BE%EC%9D%84%EB%8C%80%EC%83%81\">✅ re.sub(‘정규표현식’, ‘바꿀문자’, 찾을대상)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-recompile%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\">✅ re.compile(‘정규표현식’)</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EA%B7%B8%EB%A3%B9%ED%99%94-code-classlanguage-textcode-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\">⚡ 정규표현식 그룹화 <code class=\"language-text\">()</code> 사용 예제</a></li>\n<li><a href=\"/Python/%5Bpython%5D%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-/#-%EC%A0%84%EB%B0%A9%ED%83%90%EC%83%89-code-classlanguage-textcode--%ED%9B%84%EB%B0%A9%ED%83%90%EC%83%89-code-classlanguage-textltcode-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\">⚡ 전방탐색 <code class=\"language-text\">(?=)</code> , 후방탐색 <code class=\"language-text\">(?&lt;=)</code> 사용 예제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[Python] 정규표현식","date":"October 22, 2021"}}},"pageContext":{"slug":"/Python/[python]정규표현식-/","previous":{"fields":{"slug":"/Spring/3-springMVC/"},"frontmatter":{"title":"[Spring] Spring MVC"}},"next":{"fields":{"slug":"/Algorithm/연결리스트/"},"frontmatter":{"title":"[Algorithm] 연결리스트와 트라이구조"}}}}}