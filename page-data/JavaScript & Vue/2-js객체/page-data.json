{"componentChunkName":"component---src-templates-blog-post-js","path":"/JavaScript & Vue/2-js객체/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","author":"[hyem]","siteUrl":"https://hyemin-jang.github.io","comment":{"disqusShortName":"","utterances":"hyemin-jang/hyemin-jang.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"c6c11203-f587-569c-a890-18b81fd8a1d2","excerpt":"1) 객체 모델 (1) 브라우저 객체 모델(BOM, Browswer Object Model) : 웹 브라우저와 관련된 모든 객체 (웹브라우저가 제공하는 기능)  객체 : BOM의 최상위 객체.  하나의 브라우저가 열릴때마다 하나의 window 객체가 생성된다.  자바스크립트에서 선언한 전역변수는 모두 window 객체 안에 등록된다.  코딩할 때는 굳이 표기하지 않고 생략한다. window 객체 하위에 존재하는 여러 객체들  : url…","html":"<h2 id=\"1-객체-모델\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8\" aria-label=\"1 객체 모델 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 객체 모델</h2>\n<h3 id=\"1-브라우저-객체-모델bom-browswer-object-model\" style=\"position:relative;\"><a href=\"#1-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8bom-browswer-object-model\" aria-label=\"1 브라우저 객체 모델bom browswer object model permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 브라우저 객체 모델(BOM, Browswer Object Model)</h3>\n<p>: 웹 브라우저와 관련된 모든 객체 (웹브라우저가 제공하는 기능)</p>\n<ul>\n<li>\n<p><code class=\"language-text\">Window</code> 객체 : BOM의 최상위 객체. </p>\n<ul>\n<li>하나의 브라우저가 열릴때마다 하나의 window 객체가 생성된다. </li>\n<li>자바스크립트에서 선언한 전역변수는 모두 window 객체 안에 등록된다. </li>\n<li>코딩할 때는 굳이 표기하지 않고 생략한다.</li>\n</ul>\n</li>\n<li>\n<p>window 객체 하위에 존재하는 여러 객체들</p>\n<ul>\n<li><code class=\"language-text\">location</code> : url 주소와 관련</li>\n<li><code class=\"language-text\">navigator</code> : 브라우저에 대한 정보</li>\n<li><code class=\"language-text\">history</code> : 앞뒤 페이지 이동정보를 기록</li>\n<li><code class=\"language-text\">screen</code> : 사용자 화면</li>\n<li><code class=\"language-text\">document</code> : 브라우저에 표시된 HTML 문서</li>\n<li>… 등등</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.splessons.com/wp-content/uploads/2016/03/javascript-bom-01-splessons-1.png\" alt=\"SPLessons\"></p>\n<p>[이미지 출처] <a href=\"https://www.splessons.com/lesson/javascript-bom/\">https://www.splessons.com/lesson/javascript-bom/</a>   </p>\n<h3 id=\"2-문서-객체-모델dom-document-object-model\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8dom-document-object-model\" aria-label=\"2 문서 객체 모델dom document object model permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 문서 객체 모델(DOM, Document Object Model)</h3>\n<ul>\n<li>브라우저 객체 모델(BOM, Browser Object Model)의 일부이다.</li>\n<li>HTML, XML 문서에 접근하기 위한 인터페이스이다.</li>\n<li>브라우저 렌더링 엔진은 HTML 문서를 로드한 후 <code class=\"language-text\">파싱</code>하여 브라우저가 이해할 수 있는 구조로 구성하여 메모리에 적재하는데, 이렇게 파싱된 결과가 <strong><code class=\"language-text\">DOM</code></strong>이다. 부모-자식 관계가 있는 트리 구조로 구성되기 때문에 <strong><code class=\"language-text\">DOM Tree</code></strong>라고 한다.</li>\n<li>자바스크립트를 통해 DOM을 동적으로 변경할 수 있다.</li>\n</ul>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/DOM-model.svg/1200px-DOM-model.svg.png\" alt=\"문서 객체 모델 - 위키백과, 우리 모두의 백과사전\"></p>\n<p>[이미지 출처] <a href=\"https://ko.wikipedia.org/wiki/%EB%AC%B8%EC%84%9C_%EA%B0%9D%EC%B2%B4_%EB%AA%A8%EB%8D%B8\">위키백과</a></p>\n<blockquote>\n<p>💡 참고 : 웹문서 브라우저 렌더링</p>\n<ol>\n<li>브라우저가 HTML 문서를 로드하고 데이터를 파싱한다.</li>\n<li>HTML을 파싱한 결과로 DOM Tree를 생성한다.</li>\n<li>파싱하는 중 CSS파일 링크를 만나면 CSS파일을 요청해서 받아온다.</li>\n<li>CSS 파일을 읽어서 CSSOM (Css Object Model)을 생성한다.</li>\n<li>Attachment : DOM Tree와 CSSOM을 사용하여 Render Tree를 만든다.</li>\n<li>Layout: 각 노드들의 위치와 크기를 계산해서 Render Tree를 화면상에 배치한다.</li>\n<li>Paint: 계산이 완료된 렌더 트리를 실제로 화면에 그린다.</li>\n<li>Reflow, Repaint : 특정 액션/이벤트에 따라 HTML 요소가 변화하면 Layout을 다시 그리고(Reflow), 화면에 다시 그려준다(Repaint)</li>\n</ol>\n</blockquote>\n<p>​\t\t   </p>\n<h3 id=\"-dom-tree\" style=\"position:relative;\"><a href=\"#-dom-tree\" aria-label=\" dom tree permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌳 DOM Tree</h3>\n<p>Dom Tree는 4종류의 요소(노드)로 구성된다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">문서 노드(Document Node)</code></p>\n<ul>\n<li>최상위에 존재하는 노드</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">요소 노드(Element Node)</code></p>\n<ul>\n<li>HTML 요소 (div, input 등의 태그)</li>\n<li>중첩에 의해 부모자식 관계를 가진다</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">속성 노드(Attribute Node)</code></p>\n<ul>\n<li>HTML 요소의 속성</li>\n<li>해당 요소의 <strong>자식</strong>이 아니라 <strong>일부</strong>로 표현된다. 해당 요소를 찾아 접근한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">텍스트 노드(Text Node)</code></p>\n<ul>\n<li>HTML 요소의 텍스트</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"-dom-메서드\" style=\"position:relative;\"><a href=\"#-dom-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\" dom 메서드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 DOM 메서드</h3>\n<p>한 개의 요소 선택</p>\n<ul>\n<li><code class=\"language-text\">document.getElementById(id)</code> : id 속성값으로 한 개의 노드 선택</li>\n<li><code class=\"language-text\">document.querySelector(cssSelector)</code> : </li>\n</ul>\n<p>여러 개의 요소 선택</p>\n<ul>\n<li><code class=\"language-text\">document.getElementsByClassName(class)</code> : 해당 클래스에 속한 요소를 모두 선택</li>\n<li><code class=\"language-text\">document.getElementsByName(name)</code> : 해당 name 속성을 가진 요소를 모두 선택</li>\n<li><code class=\"language-text\">document.getElementsByTagName(태그명)</code> : 해당 태그인 요소를 모두 선택</li>\n</ul>\n<p>요소 생성</p>\n<ul>\n<li><code class=\"language-text\">document.createTextNode(텍스트)</code> : 해당 텍스트로 text노드 요소 생성</li>\n<li><code class=\"language-text\">document.write(텍스트)</code> : 문서에 텍스트 출력</li>\n</ul>\n<p>노드 간 관계를 통한 접근</p>\n<ul>\n<li><code class=\"language-text\">요소.parentNode</code> : 요소의 부모 노드 반환</li>\n<li><code class=\"language-text\">요소.childNodes</code> : 요소의 자식 노드 리스트 반환</li>\n<li><code class=\"language-text\">요소.firstChild</code> / <code class=\"language-text\">요소.lastChild</code> : 요소의 첫번째 / 마지막 자식 노드 반환</li>\n<li><code class=\"language-text\">요소.nextSibling</code> / <code class=\"language-text\">요소.previousSibling</code> : 요소의 다음 / 이전 형제 노드 반환</li>\n</ul>\n<h2 id=\"2-자바스크립트-객체\" style=\"position:relative;\"><a href=\"#2-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4\" aria-label=\"2 자바스크립트 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 자바스크립트 객체</h2>\n<h4>✅ JavaScript  표준 내장 객체</h4>\n<ul>\n<li>기초 객체 : Object, Function, Boolean, Symbol …</li>\n<li>오류 객체 : Error, …</li>\n<li>숫자 및 날짜 : Number, Math, Date … </li>\n<li>문자열 : String …</li>\n<li>인덱스 콜렉션 : Array …</li>\n<li>키 콜렉션 : Map, Set, …</li>\n<li>⭐<strong>JSON</strong> (아래에서 자세히!)</li>\n</ul>\n<h4>✅ 사용자가 직접 구성해서 생성</h4>\n<ul>\n<li><strong>객체 리터럴(Object literal)</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* 객체 리터럴 생성하기 */</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>    \n    name<span class=\"token operator\">:</span> <span class=\"token string\">'bori'</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 변수(=property) 포함 가능</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">info</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>   <span class=\"token comment\">// 메서드 포함 가능</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// {name: 'bori', age: 6, info: ƒ}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// object</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// bori</span>\n\n\n<span class=\"token comment\">/* 새로운 property 추가 및 값 대입, 삭제 가능 */</span>\nobj<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> <span class=\"token string\">'seoul'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// seoul</span>\n\n<span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span></code></pre></div>\n<h3 id=\"--json-javascript-object-notation\" style=\"position:relative;\"><a href=\"#--json-javascript-object-notation\" aria-label=\"  json javascript object notation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💎  JSON (JavaScript Object Notation)</h3>\n<ul>\n<li>자바스크립트의 객체 표기법으로부터 파생</li>\n<li>경량 데이터 교환 형식으로, 서버와 클라이언트간 데이터 전송에 가장 인기있는 데이터 포맷</li>\n<li>\n<p>형식</p>\n<ul>\n<li>JSON 데이터는 <code class=\"language-text\">데이터이름</code>과 <code class=\"language-text\">값</code>의 key, value 쌍으로 이루어짐 </li>\n<li>각 데이터들은 쉼표로 나열</li>\n<li>데이터이름(key값)은 반드시 <code class=\"language-text\">&quot; &quot;</code>(큰따옴표) 안에 있어야 함</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> v1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"보리\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 보리</span>\n\n<span class=\"token keyword\">let</span> v2 <span class=\"token operator\">=</span> <span class=\"token string\">'{\"name\":\"보리\", \"age\": 6}'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined (v2는 그냥 문자열이므로)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// JSON 형태의 문자열은 JSON.parse() 함수를 통해 JSON 데이터로 파싱 가능</span>\n\n<span class=\"token keyword\">let</span> v3 <span class=\"token operator\">=</span> <span class=\"token string\">\"{'name':'보리', 'age': 6}\"</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uncaught SyntaxError: Unexpected token ' in JSON</span>\n<span class=\"token comment\">// key값이 단일따옴표로 되어 있는 경우 파싱 불가</span></code></pre></div>\n<p>참고한 사이트</p>\n<p><a href=\"https://goddaehee.tistory.com/237\">https://goddaehee.tistory.com/237</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#1-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8\">1) 객체 모델</a></p>\n<ul>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#1-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8bom-browswer-object-model\">(1) 브라우저 객체 모델(BOM, Browswer Object Model)</a></li>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#2-%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8dom-document-object-model\">(2) 문서 객체 모델(DOM, Document Object Model)</a></li>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#-dom-tree\">🌳 DOM Tree</a></li>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#-dom-%EB%A9%94%EC%84%9C%EB%93%9C\">📝 DOM 메서드</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#2-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4\">2) 자바스크립트 객체</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#-javascript--%ED%91%9C%EC%A4%80-%EB%82%B4%EC%9E%A5-%EA%B0%9D%EC%B2%B4\">✅ JavaScript  표준 내장 객체</a></li>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#-%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%A7%81%EC%A0%91-%EA%B5%AC%EC%84%B1%ED%95%B4%EC%84%9C-%EC%83%9D%EC%84%B1\">✅ 사용자가 직접 구성해서 생성</a></li>\n</ul>\n</li>\n<li><a href=\"/JavaScript%20&#x26;%20Vue/2-js%EA%B0%9D%EC%B2%B4/#--json-javascript-object-notation\">💎  JSON (JavaScript Object Notation)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[JavaScript] 자바스크립트 객체","date":"September 14, 2021"}}},"pageContext":{"slug":"/JavaScript & Vue/2-js객체/","previous":{"fields":{"slug":"/JavaScript & Vue/1-javascript/"},"frontmatter":{"title":"[JavaScript] 자바스크립트 기초"}},"next":{"fields":{"slug":"/JavaScript & Vue/3-storage/"},"frontmatter":{"title":"[JavaScript] Web Storage"}}}}}