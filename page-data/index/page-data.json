{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Hyem.log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"문제 문제 링크 상담원으로 일하고 있는 백준이는 퇴사를 하려고 한다. 오늘부터 N+1일째 되는 날 퇴사를 하기 위해서, 남은 N일 동안 최대한 많은 상담을 하려고 한다. 백준이는 비서에게 최대한 많은 상담을 잡으라고 부탁을 했고, 비서는 하루에 하나씩 서로 다른 사람의 상담을 잡아놓았다. 각각의 상담은 상담을 완료하는데 걸리는 기간 Ti와 상담을 했을 때…","fields":{"slug":"/Algorithm/[백준]14501/"},"frontmatter":{"date":"November 03, 2021","title":"[백준] 14501 - 퇴사 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 을 사용해서 풀었다. 현 노드와 인접한 다음 레벨의 노드들을 탐색하면서, 해당 노드의 부모가 현 노드임을 표시해주기만 하면 된다.","fields":{"slug":"/Algorithm/[백준]11725/"},"frontmatter":{"date":"October 27, 2021","title":"[백준] 11725 - 트리의 부모 찾기 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 💎 이분그래프란? 이분그래프(Bipartite Graph)란, 인접한 노드를 서로 다른 색으로 칠해서 모든 노드를 두 가지 색으로만 칠할 수 있는 그래프이다. 즉, 그래프의 모든 노드들이 두 그룹으로 나눠지고, 같은 그룹에 속한 노드끼리는 서로 인접하지 않는 그래프이다. img 이미지 출처 https://gmlwjd9405.github.i…","fields":{"slug":"/Algorithm/[백준]1707/"},"frontmatter":{"date":"October 27, 2021","title":"[백준] 1707 - 이분그래프 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 백준 18352번(특정 거리의 도시 찾기) 문제를 풀고 나니 이 문제는 거의 똑같아서 쉬웠다! 이 문제 역시 모든 간선의 거리가 1로 동일하기 때문에 BFS 알고리즘으로 풀이가 가능했다. 다만 그래프를 만들 때 양방향 연결이라는 것만 주의하면 된다.","fields":{"slug":"/Algorithm/[프로그래머스]가장먼노드/"},"frontmatter":{"date":"October 26, 2021","title":"[프로그래머스] 가장 먼 노드 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 처음에는 저번에 다익스트라 알고리즘을 공부하며 썼던 포스팅에서 썼던 예시 코드를 그대로 적용해서 풀어봤는데 시간초과로 실패했다 ㅠ  생각해보니까 예시 코드의 상황과 달리 각 도시는 단방향으로만 연결된다 각 도시 사이의 모든 거리는 1이다 라는 조건이 있는데 이를 고려하지 않고 쓸모없는 계산들을 많이 해서 그런 것 같다. 결국 God구…","fields":{"slug":"/Algorithm/[백준]18352/"},"frontmatter":{"date":"October 26, 2021","title":"[백준] 18352번 - 특정 거리의 도시 찾기 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 힙 (Heap) 자료구조 최댓값과 최솟값을 빠르게 찾기 위해 고안된 자료구조 완전 이진트리 형태임  : 각각의 노드가 최대 두 개의 자식 노드를 가지는 트리 자료구조  :  마지막 레벨을 제외하고 모든 레벨이 완전히 채워져 있으며, 마지막 레벨의 모든 노드는 왼쪽부터 채워져있다 부모 노드와 자식 노드 사이에는 대소관계가 성립한다. 부모 노드가 항상 …","fields":{"slug":"/Algorithm/힙/"},"frontmatter":{"date":"October 24, 2021","title":"[Algorithm] 힙(Heap)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 그냥 리스트만 잘 사용하면 단순 구현 문제라 어렵지는 않았다. 관건은 문서를 인쇄해버리거나 맨 뒤에 추가하는 등 이동시켰을때 인덱스를 어떻게 기억할 것이냐인데,  나는 그냥 인덱스만 표시하는 리스트를 따로 만들어서 해결했다.  아니면 enumerate 함수 같은걸 사용해서 (인덱스, 문서) 형태로 튜플로 묶어서 새로운 리스트에 집어넣…","fields":{"slug":"/Algorithm/[프로그래머스] 프린터/"},"frontmatter":{"date":"October 24, 2021","title":"[프로그래머스] 프린터 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 이 문제는 프로그래머스에서 힙 자료구조를 사용하는 예시 문제로 나와 있는데… 솔직히 왜 힙을 써야하는지 잘 모르겠다. 힙을 안쓰고 리스트로만 구현해도 잘만 풀린다. 혹시 왜 힙 예제인지 이해 가시는 분은 댓글 부탁… ✅ 힙 사용한 풀이 ✅ 그냥 리스트 사용한 풀이","fields":{"slug":"/Algorithm/[프로그래머스] 이중우선순위큐/"},"frontmatter":{"date":"October 23, 2021","title":"[프로그래머스] 이중우선순위큐 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 링크 풀이 이 문제의 핵심은 기존에 있던 음식을 꺼내고, 새로운 음식을 만들어 넣어도,  다음 차례에 또 스코빌 지수가 가장 작은 음식을 찾아서 꺼내기를 계속 반복해야 한다는 점이다. 즉 계속해서 최솟값을 구해야 한다. 그래서 부모 노드가 항상 자식 노드보다 작은 값을 갖는 힙 (최소 힙) 자료형을  이용하면 엄청 쉽게 풀 수 있다. 파이썬에서…","fields":{"slug":"/Algorithm/[프로그래머스]더맵게/"},"frontmatter":{"date":"October 23, 2021","title":"[프로그래머스] 더 맵게 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 연결리스트 (LinkedList) 각 노드가  데이터와 포인터를 가지고 한 줄로 연결되어 데이터를 저장하는 자료 구조 1) 리스트 vs 연결리스트 리스트 데이터를 인덱스 값에 따라 저장 원소를 중간에 하나 삽입하거나 삭제하면, 그 뒤의 원소들이 하나씩 뒤로 밀리거나 앞당겨지면서 인덱스가 다 변화하게 된다 대량의 데이터에서 삽입 / 삭제 시 성능이 저…","fields":{"slug":"/Algorithm/연결리스트/"},"frontmatter":{"date":"October 22, 2021","title":"[Algorithm] 연결리스트와 트라이구조","category":"Algorithm","draft":false}}},{"node":{"excerpt":"정규표현식 1) 메타문자 원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용되는 문자 ✅ 문자클래스   :   사이의 문자들과 매치 예)  : a, b, c중 한 개의 문자와 매치 [ ] 안의 두 문자 사이에  사용 : 두 문자 사이의 범위 [ ] 안에  메타문자 사용:  반대(not)의 의미 표기법 의미 같은표현  숫자와 매치 0-9  숫자가 아닌것과 …","fields":{"slug":"/Python/[python]정규표현식-/"},"frontmatter":{"date":"October 22, 2021","title":"[Python] 정규표현식","category":"Python","draft":false}}},{"node":{"excerpt":"1) 구성 프론트 Controller 패턴 아키텍처 클라이언트가 보낸 요청을 받아서 공통적인 작업 먼저 수행 적절한 세부 컨트롤러로 위임 예외가 발생했을 경우 프론트컨트롤러가 일관된 방식으로 처리 프론트 컨트롤러는 스프링에서 지원해준다 = DispatcherServlet Spring Mvc Architecture Flow Online Shop, UP TO…","fields":{"slug":"/Spring/3-springMVC/"},"frontmatter":{"date":"October 05, 2021","title":"[Spring] Spring MVC","category":"Spring","draft":false}}},{"node":{"excerpt":"AOP Aspect Oriented Programming, 관점 지향 프로그래밍 의 핵심 단위는 이다. 한 클래스가 단일 책임을 가지도록 분리한다. AOP에서 핵심 단위는 이다. 즉, 필수적이지만 어쩔 수 없이 반복적으로 사용되는 코드들을 분리하여 모듈성을 증가시킨다. AOP는 OOP의 단점(코드의 중복, 유지보수의 어려움, 재사용성 저하)를 보완해줄 수…","fields":{"slug":"/Spring/2-aop/"},"frontmatter":{"date":"October 04, 2021","title":"[Spring] AOP (관점 지향 프로그래밍)","category":"Spring","draft":false}}},{"node":{"excerpt":"1. 탐욕법(Greedy Algorithm)? 전체가 아닌 현재 상태에서 최선의 선택을 하는 알고리즘.   전체탐색보다 빠르지만 반드시 정답을 도출하지는 않는다. 전체 문제를 작은 문제로 나누어서 정답을 구한다는 점에서 동적계획법과 유사하지만, 작은 문제들의 최적의 해가  전체의 최적의 해가 될 수 있는지 판단해서 탐욕법이 적용가능한지 우선 판단해야 한다…","fields":{"slug":"/Algorithm/그리디/"},"frontmatter":{"date":"September 30, 2021","title":"[Algorithm] 그리디(Greedy) 알고리즘","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. Axios? 브라우저, Node.js를 위한 Promise API를 활용하는 HTTP 비동기 통신 라이브러리 브라우저에선 XMLHttpRequests를, Node.js에선 HTTP 요청 생성 Promis API 지원 💡 Promise ? 비동기 처리를 유연하게 처리하기 위한 자바스크립트 API. Pending - Fulfilled - Rejected…","fields":{"slug":"/JavaScript & Vue/5-axios/"},"frontmatter":{"date":"September 25, 2021","title":"[JavaScript] Axios","category":"JavaScript & Vue","draft":false}}},{"node":{"excerpt":"1. 최단 경로 찾기 1) 플로이드 와샬 알고리즘 존재하는 모든 노드를 최소 비용으로 하나로 연결하는 최단 경로 찾기 알고리즘 ✅ Q. 모든 노드를 연결할 수 있는 최소 비용은 얼마인가? 과 을 선언한다. 비용 배열은 을, 방문 배열에는 아직 방문하지 않았음을 의미하는 를 담아둔다. 아무 노드에서나 시작해도 상관없다. 편의상 0번 노드에서 탐색을 시작한다…","fields":{"slug":"/Algorithm/다익스트라/"},"frontmatter":{"date":"September 18, 2021","title":"[Algorithm] 최단경로찾기 - 플로이드 와샬 & 다익스트라","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. Ajax? 비동기식 자바스크립트와 XML (Asynchronous JavaScript and XML) (그러나 현재 데이터 전송은 대부분 xml이 아니라 json을 이용하는건 함정) 자바스크립트를 통해서 와 가 으로 데이터를 교환할 수 있는 기법 💡 비동기 방식? 웹 페이지 전체를 다시 로딩하지 않고 데이터를 불러오는 방식 요청을 보낸 후 응답을 기…","fields":{"slug":"/JavaScript & Vue/4-ajax/"},"frontmatter":{"date":"September 17, 2021","title":"[JavaScript] Ajax","category":"JavaScript & Vue","draft":false}}},{"node":{"excerpt":"1) 웹 스토리지 (Web Storage)? 브라우저 상에 데이터를 저장할 수 있는 기술 의 단점 보완 저장용량 문제 해결 (최대 5MB) 요청시 Header에 자동으로 전송되지 않음 - 쿠키의 CSRF,  트래픽 문제 해결 문자열 데이터 뿐 아니라 직렬화를 통해 객체 저장 가능 (아래에서 자세히) 이전 포스팅 참조 - 화면이동과 상태유지 기법 ✅ Loc…","fields":{"slug":"/JavaScript & Vue/3-storage/"},"frontmatter":{"date":"September 16, 2021","title":"[JavaScript] Web Storage","category":"JavaScript & Vue","draft":false}}},{"node":{"excerpt":"1) 객체 모델 (1) 브라우저 객체 모델(BOM, Browswer Object Model) : 웹 브라우저와 관련된 모든 객체 (웹브라우저가 제공하는 기능)  객체 : BOM의 최상위 객체.  하나의 브라우저가 열릴때마다 하나의 window 객체가 생성된다.  자바스크립트에서 선언한 전역변수는 모두 window 객체 안에 등록된다.  코딩할 때는 굳이 …","fields":{"slug":"/JavaScript & Vue/2-js객체/"},"frontmatter":{"date":"September 14, 2021","title":"[JavaScript] 자바스크립트 객체","category":"JavaScript & Vue","draft":false}}},{"node":{"excerpt":"자바스크립트란? 웹브라우저에 의해 해석되고 실행되는 스크립트 언어 웹문서를 동적으로 꾸밀때 사용됨 HTML 문서 속에 라는 태그를 사용해 기술 1) 변수 (1) 변수 선언 키워드   전역변수(script 태그내) / 로컬변수(함수 내) 선언 가능 ,  가능 var 키워드는 생략 가능   선언된 중괄호 내부에서만 사용 가능 재선언 불가, 만 가능   선언된…","fields":{"slug":"/JavaScript & Vue/1-javascript/"},"frontmatter":{"date":"September 13, 2021","title":"[JavaScript] 자바스크립트 기초","category":"JavaScript & Vue","draft":false}}},{"node":{"excerpt":"1. Connection Pool 1) Connection Pool을 사용하는 이유 자바 프로그램에서 DBMS로 커넥션을 생성하려면 시간이 많이 걸린다. 사용자가 접속할 때마다 커넥션을 생성하면 오버헤드가 발생할 수 있다. 그래서 웹 어플리케이션을 실행함과 동시에 커넥션 풀에 일정 개수의 DB 커넥션을 미리 만들어둔다. (Pool - 서버에 이미 내장된 …","fields":{"slug":"/Servlet & JSP/4.ConnectionPool/"},"frontmatter":{"date":"September 05, 2021","title":"[Servlet & JSP] DB연동과 Connection Pool","category":"Servlet & JSP","draft":false}}},{"node":{"excerpt":"1. 동적계획법이란? Dynamic Programming (DP) 하나의 큰 문제를 여러 개의 공통되는 작은 문제로 나누어서 작은 문제의 정답들을 결합하여 알고리즘을 푸는 과정  라고 생각하면 됨 ⚡점화식(수열에서 n번째 항을 이전에 나온 항들로 나타낸 공식) 을 생각해보자 1) 동적계획법 접근방법 (1) Bottom Up 작은 문제에서 큰 문제로  호출…","fields":{"slug":"/Algorithm/동적계획법/"},"frontmatter":{"date":"September 04, 2021","title":"[Algorithm] 동적계획법(Dynamic Programming)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. JSP란? Java Server Page HTML 코드에 JAVA 코드를 넣어 동적 웹 페이지를 생성할 수 있는 서버 사이드 언어(Web Container에서 실행되는 언어) (참고: html / css / js는 client side 언어 - 서버 없이도 브라우저만 있으면 실행 가능) ⚡ 특징 파일 확장자 : *.jsp jsp 파일을 클라이언트가 …","fields":{"slug":"/Servlet & JSP/3.JSP/"},"frontmatter":{"date":"September 03, 2021","title":"[Servlet & JSP] JSP","category":"Servlet & JSP","draft":false}}},{"node":{"excerpt":"1. 화면이동 기법 1) 화면 이동 방법 1 - HTML 활용 버튼 :   form 태그 내의 submit 버튼 :  form 태그 내부의 모든 input 데이터를 form의 action 속성에 지정한 곳으로 전송 method=“post” 명시하면 POST방식으로 전송 / default는 GET방식 링크 :   2) 화면 이동 방법 2 - Servlet …","fields":{"slug":"/Servlet & JSP/2.Servlet-화면이동과 상태유지/"},"frontmatter":{"date":"August 31, 2021","title":"[Servlet & JSP] 화면이동과 상태유지 기법","category":"Servlet & JSP","draft":false}}},{"node":{"excerpt":"1. WEB 개요 💎 웹 서비스 구조   정적 컨텐츠(HTML, CSS, image 등) 제공  동적 컨텐츠 제공을 위해 클라이언트의 요청을 WAS에 전달, WAS가 처리한 결과를 클라이언트에게 응답   parameter의 내용에 따라 다양한 로직 처리(DB조회 등)를 수행하여 동적 컨텐츠 제공  라고도 한다. ⚡ Web Server와 WAS를 함께 사용…","fields":{"slug":"/Servlet & JSP/1.Servlet/"},"frontmatter":{"date":"August 30, 2021","title":"[Servlet & JSP] Servlet","category":"Servlet & JSP","draft":false}}},{"node":{"excerpt":"1. 재귀함수 메소드 혹은 함수의 내부에서 자기 자신의 메소드 혹은 함수를 다시 호출하는 함수 1) 재귀함수 작동 원리 recur 함수가 호출된다 중간에 recur 함수 호출하는 부분을 만나면 두번째로 recur 함수를 호출한다. 중간에 recur 함수 호출하는 부분을 만나면 세번째로 recur 함수를 호출한다. 재귀함수 종료조건에 의해 recur 함수가…","fields":{"slug":"/Algorithm/재귀함수/"},"frontmatter":{"date":"August 29, 2021","title":"[Algorithm] 재귀함수","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 해시 key와 value 쌍으로 데이터를 저장하는 구조 검색과 저장이 매우 유용한 구조이다. 1) 해시의 구조    임의의 길이를 갖는 메시지를 입력받아 고정된 길이의 해시값을 출력하는 함수 해시함수에 의하여 key값이 숫자(해시값)로 변환된다  해시값을 인덱스로 사용하는 배열 2) 해시 구현 파이썬  클래스 활용 삽입 수정 추출 삭제 3) 딕셔너리…","fields":{"slug":"/Algorithm/해시/"},"frontmatter":{"date":"August 23, 2021","title":"[Algorithm] 해시","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. JPA ? : Java Persistence API 자바 진영의  기술 표준. 자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 이다. 💡 ORM(Object Relational Mapping) SQL을 직접 다루지 않고, 객체와 테이블을 매핑하여 간접적으로 DB데이터 관리 객체 간 관계를 바탕으로 SQL 문장 자동 생성 SQL이 아…","fields":{"slug":"/Java/12.JPA/"},"frontmatter":{"date":"August 21, 2021","title":"[Java] 12. JPA","category":"Java","draft":false}}},{"node":{"excerpt":"1. JDBC Java DataBase Connectivity 자바 언어로 다양한 종류의 DB에 접속하고 SQL문을 수행하기 위해 사용되는 표준 API.  자바 프로그램과 DBMS간의 통신을 중간에서 번역해주는 역할을 한다고 보면 된다. 이미지 출처 https://m.blog.naver.com/PostView.naver?isHttpsRedirect=tru…","fields":{"slug":"/Java/11.JDBC/"},"frontmatter":{"date":"August 19, 2021","title":"[Java] 11. JDBC","category":"Java","draft":false}}},{"node":{"excerpt":"문제 문제 상근이는 보통 사람들이 사는 것과는 조금 다른 삶을 사는 사람이다. 상근이는 이런 사람들의 시선이 부담스럽기 때문에, 자신만의 숫자를 개발하기로 했다. 바로 그 이름은 팩토리얼 진법이다. 팩토리얼 진법은 각 자리에 올 수 있는 숫자는 0부터 9까지로 10진법과 거의 비슷하다. 하지만, 읽는 법은 조금 다르다. 팩토리얼 진법에서는 i번 자리의 값…","fields":{"slug":"/Algorithm/[백준]5692/"},"frontmatter":{"date":"August 17, 2021","title":"[백준] 5692 - 팩토리얼 진법 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 진법 수를 셀 때 자릿수가 올라가는 단위를 기준으로 하는 샘법의 총칭 (사용하는 숫자의 개수가 진법의 숫자를 의미) 1) 진법 변환하기 - 파이썬 함수 10진수 10을 2진수로 변환하기   => 0b1010  10진수 95를 8진수로 변환하기   => 0o137  10진수 350을 16진수로 변환하기   => 0x15e ⚡ 16진법에서 사용하는 16…","fields":{"slug":"/Algorithm/비트연산,진법변환/"},"frontmatter":{"date":"August 16, 2021","title":"[Algorithm] 진법변환/비트연산","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 깊이우선탐색 (Depth First Search) 하나의 경우에 수에 대한 모든 경우의 수를 조사하고, 다음 경우의 수를 조사하면서 해를 찾는 과정 1) 깊이우선탐색과 스택 A부터 검사 → A가 정답 아님 → A 아래 경우의 수 B, C, D를 스택에 담음 스택 가장 마지막 데이터인 B를 꺼내 검사 → B가 정답 아님 → B 아래 경우의 수 E, F…","fields":{"slug":"/Algorithm/DFS,BFS/"},"frontmatter":{"date":"August 08, 2021","title":"[Algorithm] DFS/BFS","category":"Algorithm","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/10.Maven/"},"frontmatter":{"date":"August 04, 2021","title":"[Java] 10. Maven","category":"Java","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/9.Stream API & Lambda/"},"frontmatter":{"date":"August 03, 2021","title":"[Java] 9. Stream API & Lambda","category":"Java","draft":false}}},{"node":{"excerpt":"문제 문제 설명 한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다. 각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요. 제한사항 numbers는 길이 1 이상 7 …","fields":{"slug":"/Algorithm/[프로그래머스]소수찾기/"},"frontmatter":{"date":"August 02, 2021","title":"[프로그래머스] 소수찾기 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 설명 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, … 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3,…","fields":{"slug":"/Algorithm/[프로그래머스]모의고사/"},"frontmatter":{"date":"August 02, 2021","title":"[프로그래머스] 모의고사 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/8.IO/"},"frontmatter":{"date":"August 02, 2021","title":"[Java] 8. IO","category":"Java","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/7.예외처리/"},"frontmatter":{"date":"August 01, 2021","title":"[Java] 7. 예외처리","category":"Java","draft":false}}},{"node":{"excerpt":"문제 문제 설명 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다. Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다. Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의…","fields":{"slug":"/Algorithm/[프로그래머스]카펫/"},"frontmatter":{"date":"July 31, 2021","title":"[프로그래머스] 카펫 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오. 입력 첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 둘째 줄에는 숫자 카드에 적혀있는 정…","fields":{"slug":"/Algorithm/[백준]10816/"},"frontmatter":{"date":"July 31, 2021","title":"[백준] 10816 - 숫자카드2 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/6.자바 자료구조/"},"frontmatter":{"date":"July 31, 2021","title":"[Java] 6. 자바 자료구조 - ArrayList, Set, Map","category":"Java","draft":false}}},{"node":{"excerpt":"1. 탐색 : 많은 데이터 속에서 원하는 데이터를 찾는 것. 완전탐색 이분탐색 깊이우선탐색 너비우선탐색 문자열탐색, KMP, BM 등등.. 1) 완전탐색 (Brute Force) 컴퓨터의 빠른 계산 능력을 이용하여 가능한 모든 경우의 수를 탐색 무조건 답을 구하지만, 효율성이 가장 좋지 않은 알고리즘 ✅ 예) 카드들이 들어있는 리스트 에서 8번 카드를 찾…","fields":{"slug":"/Algorithm/완전탐색,이분탐색/"},"frontmatter":{"date":"July 30, 2021","title":"[Algorithm] 완전탐색/이분탐색","category":"Algorithm","draft":false}}},{"node":{"excerpt":"","fields":{"slug":"/Java/5.배열/"},"frontmatter":{"date":"July 30, 2021","title":"[Java] 5. 배열","category":"Java","draft":false}}},{"node":{"excerpt":"자바 클래스를 만들 때, 클래스 간의 관계를 판단해보자. is a 관계 has a 관계 🚗 예1) 자동차 클래스  -  엔진 클래스, 바퀴 클래스 … ‘자동차 has a 엔진’ 관계를 가지고 있다.\n: 엔진 클래스를 자동차 클래스의 멤버변수화 시키면 된다. 📱 예2)  휴대폰 클래스  - 아이폰 클래스, 안드로이드폰 클래스 … ‘아이폰 is a 휴대폰’ …","fields":{"slug":"/Java/4.상속과 다형성/"},"frontmatter":{"date":"July 30, 2021","title":"[Java] 4. 상속과 다형성","category":"Java","draft":false}}},{"node":{"excerpt":"1. 접근제한자 (Access Modifier) 클래스, 클래스 내부의 변수/메서드/생성자에 대한 접근 권한 지정 적용 위치 클래스 선언구 : public, default만 사용 가능\n⚡.java 파일 내에 여러 클래스를 생성할 수 있지만, public 클래스는 하나만 존재할 수 있다.⚡ 변수, 생성자, 메소드 선언구 : 4가지 다 사용 가능 종류 Acc…","fields":{"slug":"/Java/3.접근제한자와 & Static/"},"frontmatter":{"date":"July 29, 2021","title":"[Java] 3. 접근제한자와 정보 은닉 & Static","category":"Java","draft":false}}},{"node":{"excerpt":"1. 객체(Object) : 객체는 현실세계에 존재하는 모든 사물이 될 수 있다. 예) 아침에 일어나 버스를 타고 학교에 가는 과정을 프로그래밍한다고 가정 ‘학생’, ‘아침밥’, ‘버스’, ‘학교’ 등등의 객체 정의 객체 사이에 일어나는 일들을 구현 \n=  2. 클래스(Class) : 객체의 속성과 기능을 코드로 구현한 것.  ‘객체를 만들어내기 위한 틀…","fields":{"slug":"/Java/2.클래스와-객체/"},"frontmatter":{"date":"July 29, 2021","title":"[Java] 2. 클래스와 객체","category":"Java","draft":false}}},{"node":{"excerpt":"1. 변수와 자료형 1) 변수 선언 : 선언한 변수 이름으로 어떤 위치에 있는 메모리를 얼마만큼 사용하겠다는 뜻 변수의 자료형 선택 변수 이름 정하기 값 대입 ⚡변수 이름 정할 때 제약사항⚡ 영문자(대소문자)나 숫자 사용 가능, 특수문자는 , 만 사용 가능 변수 이름은 숫자로 시작할 수 없음 자바에서 사용하는 예약어는 사용할 수 없음 (while, int…","fields":{"slug":"/Java/1.변수와 자료형/"},"frontmatter":{"date":"July 29, 2021","title":"[Java] 변수와 자료형","category":"Java","draft":false}}},{"node":{"excerpt":"문제 문제 설명 초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요. 제한사항 prices의 각 가격은 1 이상 10,000 이하인 자연수입니다. prices의 길이는 2 이상 100,000 이하입니다. 입출력 예 prices retur…","fields":{"slug":"/Algorithm/[프로그래머스] 주식가격/"},"frontmatter":{"date":"July 27, 2021","title":"[프로그래머스] 주식가격 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"문제 문제 설명 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다. 먼저 배포되어야 하는 순서대로 작업의 진도가 …","fields":{"slug":"/Algorithm/[프로그래머스] 기능개발/"},"frontmatter":{"date":"July 26, 2021","title":"[프로그래머스] 기능개발 (파이썬)","category":"Algorithm","draft":false}}},{"node":{"excerpt":"1. 스택(Stack) ‘쌓는다’는 의미.\n하나의 리스트에 대해 한쪽 방향에서만 접근이 가능한 구조.\nLIFO (Last-In, First-Out) 가 기본원리 ✅ 스택의 구조  : 새로운 데이터를 리스트의 가장 마지막 데이터 뒤에 넣음  : 가장 마지막 데이터가 무엇인지 확인함  : 가장 마지막 데이터를 꺼냄 ​\t   ✅ 스택 구현하기 직접 구현 Lis…","fields":{"slug":"/Algorithm/스택, 큐/"},"frontmatter":{"date":"July 26, 2021","title":"[Algorithm] 스택, 큐","category":"Algorithm","draft":false}}}]}},"pageContext":{}}}