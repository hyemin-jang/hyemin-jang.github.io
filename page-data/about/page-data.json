{"componentChunkName":"component---src-pages-about-js","path":"/about/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"0e0dfeb0-e5d3-587a-87d0-8a1e7bd1ce61","excerpt":"","html":"","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"82fadb9f-bc0e-5380-ace5-8eb22f013242","excerpt":"1. 재귀함수 메소드 혹은 함수의 내부에서 자기 자신의 메소드 혹은 함수를 다시 호출하는 함수 1) 재귀함수 작동 원리 image-20210829162049519 recur 함수가 호출된다 중간에 recur 함수 호출하는 부분을 만나면 두번째로 recur…","html":"<h1 id=\"1-재귀함수\" style=\"position:relative;\"><a href=\"#1-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98\" aria-label=\"1 재귀함수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 재귀함수</h1>\n<p>메소드 혹은 함수의 내부에서 자기 자신의 메소드 혹은 함수를 다시 호출하는 함수</p>\n<h2 id=\"1-재귀함수-작동-원리\" style=\"position:relative;\"><a href=\"#1-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98-%EC%9E%91%EB%8F%99-%EC%9B%90%EB%A6%AC\" aria-label=\"1 재귀함수 작동 원리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 재귀함수 작동 원리</h2>\n<p><img src=\"C:%5CUsers%5Chmjan%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210829162049519.png\" alt=\"image-20210829162049519\"></p>\n<ul>\n<li>recur 함수가 호출된다</li>\n<li>중간에 recur 함수 호출하는 부분을 만나면 두번째로 recur 함수를 호출한다.</li>\n<li>중간에 recur 함수 호출하는 부분을 만나면 세번째로 recur 함수를 호출한다.</li>\n<li>재귀함수 종료조건에 의해 recur 함수가 종료된다.</li>\n<li>두번째 호출에서 recur() 호출 부분이 종료되었으므로 아랫줄을 마저 실행하고 두번째 recur 함수를 종료한다.</li>\n<li>첫번째 호출에서 recur() 호출 부분이 종료되었으므로 아랫줄을 마저 실행하고 첫번째 recur 함수를 종료한다.</li>\n</ul>\n<h2 id=\"2-사용-예시\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"2 사용 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 사용 예시</h2>\n<h3 id=\"1-n개-성분들의-합으로-표현할-수-있는-숫자의-경우의-수\" style=\"position:relative;\"><a href=\"#1-n%EA%B0%9C-%EC%84%B1%EB%B6%84%EB%93%A4%EC%9D%98-%ED%95%A9%EC%9C%BC%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%88%AB%EC%9E%90%EC%9D%98-%EA%B2%BD%EC%9A%B0%EC%9D%98-%EC%88%98\" aria-label=\"1 n개 성분들의 합으로 표현할 수 있는 숫자의 경우의 수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) n개 성분들의 합으로 표현할 수 있는 숫자의 경우의 수?</h3>\n<p>= 2^n개   (각 원소가 선택되느냐/선택안되느냐)</p>\n<p>=> 그 이후 중복된 값이 있을수도 있으니 제거해주면 됨</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n    \nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># i=0 : 첫번째 원소 선택안함 / i=1 : 선택</span>\n\t<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># j=0 : 두번째 원소 선택안함 / j=1 : 선택</span>\n\t\t<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># k=0 : 세번째 원소 선택안함 / k=1 : 선택</span>\n\t\t\tresult<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>j <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약 원소 개수가 7개라면? 반복문 7개 있어야됨</p>\n<p>재귀함수 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nindex <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nvalue <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   \n    <span class=\"token comment\"># 재귀함수 종료 구문</span>\n    <span class=\"token keyword\">if</span> index <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 재귀함수 본문   </span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        recur<span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 원소 선택하고 다음 원소로</span>\n        recur<span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 원소 선택 안하고 다음 원소로</span>\n\n    <span class=\"token keyword\">return</span> result\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>recur<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># {0, 3, 5, 8, 11, 13, 16}</span>\n\n\n실행순서 <span class=\"token number\">16</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">0</span></code></pre></div>\n<p>실행순서</p>\n<ol>\n<li>recur(0, 0) 호출</li>\n</ol>\n<p>​\t2) recur(1, 3) 호출</p>\n<p>​\t\t3) recur(2, 3+5) 호출</p>\n<p>​\t\t\t4) recur(3, 3+5+8) 호출</p>\n<p>​\t\t\t\t4-1) if블록에 의해 종료, result.add(16)</p>\n<p>​\t\t\t\t4-2) recur(3, 3+5+8) 종료됐으므로 아랫줄 실행 - recur(3, 3+5) 실행</p>\n<p>​\t\t\t\t4-3) if블록에 의해 종료, result.add(8)</p>\n<p>​\t\t\t</p>\n<p>​\t …</p>\n<h3 id=\"2-팩토리얼-구하기\" style=\"position:relative;\"><a href=\"#2-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-%EA%B5%AC%ED%95%98%EA%B8%B0\" aria-label=\"2 팩토리얼 구하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 팩토리얼 구하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> factorial<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>factorial<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 120</span></code></pre></div>\n<h3 id=\"3-피보나치-수열\" style=\"position:relative;\"><a href=\"#3-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98%EC%97%B4\" aria-label=\"3 피보나치 수열 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 피보나치 수열</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> fibonacci<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fibonacci<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"3-재귀함수의-깊이\" style=\"position:relative;\"><a href=\"#3-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98%EC%9D%98-%EA%B9%8A%EC%9D%B4\" aria-label=\"3 재귀함수의 깊이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 재귀함수의 깊이</h2>\n<ul>\n<li>파이썬에서는 재귀함수의 깊이가 1000번으로 제한되어 있음</li>\n<li>그 이상 호출되면 </li>\n<li></li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"349b303f-a9b5-5f9d-8654-6acddbef6c52","excerpt":"실행단위 : cpu core…","html":"<p>실행단위 : cpu core에서 실행하는 하나의 단위</p>\n<ul>\n<li>프로세스</li>\n<li>스레드 둘다 포함</li>\n</ul>\n<p>프로세스 : 하나의 스레드만 가지고 있는 단일 스레드 프로세스</p>\n<p>프로그램이 프로세스가 되는것 : 실행이 되는 무언가로 되는것</p>\n<p><strong>프로세스</strong> : 프로그램이 실행된 것</p>\n<ul>\n<li>데이터가 메모리(코드, 데이터, 힙, 스택 영역) 에 올라감</li>\n<li>PCB 블럭이 만들어짐 (포인터, process state, PID … 등등의 정보)</li>\n</ul>\n<p>여러 프로세스 동시에 실행 : 각 프로세스가 아주 짧은 텀으로 교차되는것 (컨텍스트 스위칭)</p>\n<p>=> 너무 복잡</p>\n<p>=> 경량화된 프로세스인 ‘스레드’ 등장</p>\n<p>: 공유하는 자원이 있기 때문에 가능. => 캐싱 적중률 증가</p>\n<p><strong>스레드</strong> : 한 프로세스 내에서 나뉘어진 하나 이상의 실행 단위</p>\n<p>&#x3C;한 어플리케이션에 대한 여러 작업을 처리하는 방식></p>\n<ul>\n<li>\n<p>1 멀티프로세스</p>\n<ul>\n<li>한 프로세스를 포크해서 자식프로세스를 여러개 만들어서 처리</li>\n<li>자식프로세스는 부모와 별개의 메모리 영역 차지</li>\n<li>각 프로세스는 독립적이기 때문에 IPC를 사용해서 통신</li>\n<li>자원 소모적, 컨텍스트 스위칭 비용 큼</li>\n<li>동기화 작업 덜 신경써도 됨</li>\n</ul>\n</li>\n<li>\n<p>2 멀티스레드</p>\n<ul>\n<li>한 프로세스가 다수의 스레드로 구성되어 있음</li>\n<li>메모리효율적, 통신비용절감, </li>\n<li>동기화 신경써야함</li>\n</ul>\n</li>\n</ul>\n<p>멀티코어</p>\n<ul>\n<li>하드웨어의 측면.</li>\n<li>( ‘동시성’ : 여러 실행 단위를 빠른 텀으로 번갈아 실행하는 것 )</li>\n<li>병렬처리 : 물리적으로 여러 코어를 사용해서 다수의 실행단위를 동시에 실행하는 것</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"61e4d763-cd96-548f-8150-43ac3885a856","excerpt":"웹서버:  웹브라우저(클라이언트)로부터 HTTP 요청을 받아 HTML 문서와 같은 정적 컨텐츠를 제공하는 프로그램 동적 컨텐츠 요청을 받을시 Web Application Server(WAS)로 전달 WAS DB…","html":"<p>웹서버: </p>\n<p>웹브라우저(클라이언트)로부터 HTTP 요청을 받아 HTML 문서와 같은 정적 컨텐츠를 제공하는 프로그램</p>\n<p>동적 컨텐츠 요청을 받을시</p>\n<ul>\n<li>Web Application Server(WAS)로 전달</li>\n</ul>\n<p>WAS</p>\n<p>DB조회 등 다양한 로직 처리를 요구하는 동적 컨텐츠 제공</p>\n<p>동적컨텐츠 : 요청 인자에 따라 바뀔 수 있는 컨텐츠</p>\n<p>WAS만 사용하지 않고 웹서버와 함께 사용하는 이유</p>\n<ul>\n<li>정적 컨텐츠는 웹서버, 동적컨텐츠는 WAS가 담당 => 책임 분할을 통한 서버 부하 방지</li>\n<li>WAS의 로드밸런싱 기능 : 여러 WAS가 나눠서 처리하게 할수있음</li>\n<li>Health check 기능 : 서버에 주기적으로 HTTP 요청을 보내 서버의 상태를 확인</li>\n<li>보안 : 리버스 프록시를 통해 실제 서버를 외부에 노출하지 않을 수 있다</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"24ed503f-5246-5663-94c1-d127df278815","excerpt":"Your name Thank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"your-name\" style=\"position:relative;\"><a href=\"#your-name\" aria-label=\"your name permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}}]}},"pageContext":{}}}