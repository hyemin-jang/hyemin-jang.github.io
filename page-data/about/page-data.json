{"componentChunkName":"component---src-pages-about-js","path":"/about/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"93d60855-2dfa-56c0-a59f-0337ebabf728","excerpt":"","html":"","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"2287d072-7eb8-53ad-89ea-83757583f72e","excerpt":"node js 설치 자바스크립트의 npm = 자바의 maven = 파이썬의 pip","html":"<p>node js 설치</p>\n<p>자바스크립트의 npm = 자바의 maven = 파이썬의 pip</p>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"c555bef2-8bc5-5468-b185-5633f5862bf1","excerpt":"1. Ajax? 비동기식 자바스크립트와 XML (Asynchronous JavaScript and XML) 자바스크립트를 통해서 서버와 브라우저가 비동기 방식으로 데이터를 교환할 수 있는 기법 (현재 데이터 전송은 거의 xml이 아니라 json…","html":"<h1 id=\"1-ajax\" style=\"position:relative;\"><a href=\"#1-ajax\" aria-label=\"1 ajax permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Ajax?</h1>\n<p><strong>비동기식 자바스크립트와 XML (Asynchronous JavaScript and XML)</strong></p>\n<p><strong>자바스크립트를 통해서 서버와 브라우저가 비동기 방식으로 데이터를 교환할 수 있는 기법</strong></p>\n<p><del>(현재 데이터 전송은 거의 xml이 아니라 json을 이용하는건 함정)</del></p>\n<p>💡 비동기 방식?</p>\n<ul>\n<li>웹 페이지 전체를 다시 로딩하지 않고 데이터를 불러오는 방식</li>\n<li>웹 페이지가 로드된 후에 서버로 request를 보낼 수 있고, response를 받을 수 있다.</li>\n</ul>\n<h2 id=\"1-xmlhttprequest\" style=\"position:relative;\"><a href=\"#1-xmlhttprequest\" aria-label=\"1 xmlhttprequest permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) XMLHttpRequest</h2>\n<p>자바스크립트의 비동기 통신 API. 전체 페이지의 새로고침 없이도 URL로부터 데이터를 받아올 수 있는 객체. (XML뿐 아니라 모든 종류의 데이터를 받아올 수 있음)</p>\n<p>✅ XMLHttpRequest의 속성들</p>\n<ul>\n<li>\n<p><code class=\"language-text\">readyState</code> : 요청의 상태를 체크 가능한 속성</p>\n<ul>\n<li>0 (UNSENT) : XMLHttpRequest 객체가 생성됨</li>\n<li>1 (OPENED) : open() 메소드가 성공적으로 실행됨</li>\n<li>2 (HEADERS_RECEIVED) : 모든 요청에 대한 응답이 도착함</li>\n<li>3 (LOADING) : 요청한 데이터를 처리 중임</li>\n<li>4 (DONE) : 요청한 데이터의 처리가 완료되어 응답할 준비 완료</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">status</code>: 요청의 응답 상태를 나타냄</p>\n<ul>\n<li>200 : 응답 성공</li>\n<li>404 : 서버에 문서가 존재하지 않음</li>\n<li>405</li>\n</ul>\n</li>\n<li><code class=\"language-text\">responseText</code> &#x26; <code class=\"language-text\">responseXML</code> : 서버에서 데이터가 응답될 때 해당 데이터를 대입받는 속성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadDoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>     \n    <span class=\"token comment\">// ajax 요청 객체 생성</span>\n    <span class=\"token keyword\">const</span> xhttp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n    <span class=\"token comment\">// 요청~응답까지의 검증 및 응답 데이터 처리하기 위한 사전 설정</span>\n    xhttp<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// onreadystatechange 이벤트 핸들러 설정</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 응답 완료 &amp;&amp; 정상응답이면</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 요청한 데이터를 문자열로 반환</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ajaxRes.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 요청방법 및 요청할 주소 설정</span>\n    xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 요청 전송 -> 실제 요청 수행</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"f0c92ed9-8653-5c50-a406-f7e6de5d90f1","excerpt":"DOM? BOM?  목차 -변수 -함수 -브라우저 내장 함수 ​\t- alert(),  -DOM (Document Object Model) documentElementById() -js의 객체 -Ajax -View…","html":"<p>DOM? BOM? </p>\n<p>목차</p>\n<p>-변수</p>\n<p>-함수</p>\n<p>-브라우저 내장 함수</p>\n<p>​\t- alert(), </p>\n<p>-DOM (Document Object Model)</p>\n<ul>\n<li>documentElementById()</li>\n</ul>\n<p>-js의 객체</p>\n<p>-Ajax</p>\n<p>-View</p>\n<h1 id=\"1-자바스크립트란\" style=\"position:relative;\"><a href=\"#1-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%9E%80\" aria-label=\"1 자바스크립트란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 자바스크립트란?</h1>\n<ul>\n<li><strong>웹브라우저에 의해 해석되고 실행</strong>되는 스크립트 언어</li>\n<li>웹문서를 동적으로 꾸밀때 사용됨</li>\n<li>HTML 문서 속에 <code class=\"language-text\">&lt;script&gt;</code>라는 태그를 사용해 기술</li>\n</ul>\n<h1 id=\"2-변수\" style=\"position:relative;\"><a href=\"#2-%EB%B3%80%EC%88%98\" aria-label=\"2 변수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 변수</h1>\n<p>(1) 변수 선언 키워드</p>\n<ul>\n<li>var : 전역변수(script 태그내) 선언 / 로컬변수(함수 내) 선언 - 함수 내 자유롭게 사용가능</li>\n<li>let : 선언된 중괄호 내부에서만 사용 가능</li>\n<li>const : 선언된 중괄호 내부에서만 사용 가능 / 값 재할당 불가(상수)</li>\n<li>키워드 없이 :  함수 내에 선언하더라도 전역변수로 선언 - script 태그 내부에서 자유롭게 사용 가능</li>\n</ul>\n<p>(2) 변수 scope</p>\n<ul>\n<li>함수 내에서 선언된 로컬 변수 -> 선언된 범위 내에서만 호출 가능</li>\n</ul>\n<h1 id=\"2-함수\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98\" aria-label=\"2 함수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수</h1>\n<h2 id=\"1-함수-생성-방식\" style=\"position:relative;\"><a href=\"#1-%ED%95%A8%EC%88%98-%EC%83%9D%EC%84%B1-%EB%B0%A9%EC%8B%9D\" aria-label=\"1 함수 생성 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 함수 생성 방식</h2>\n<h3 id=\"1-함수-선언식\" style=\"position:relative;\"><a href=\"#1-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EC%8B%9D\" aria-label=\"1 함수 선언식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 함수 선언식</h3>\n<p>일반적인 프로그래밍 언어에서의 함수 선언과 같음</p>\n<p><code class=\"language-text\">function 함수명() { 구현로직 }</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 선언</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getMyName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출</span>\n<span class=\"token function\">getMyName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hyem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>함수 선언식은 호이스팅에 영향을 받는다.</p>\n<p>: 코드를 구현한 위치와 관계없이 호이스팅에 따라 브라우저가 자바스크립트를 해석할 때 맨 위로 끌어올려진다.</p>\n<blockquote>\n<p>💡 호이스팅(Hoisting)</p>\n<p>ㅇㄹㅇㄹㅇㅁ</p>\n</blockquote>\n<h3 id=\"2-함수-표현식\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"2 함수 표현식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 함수 표현식</h3>\n<h4>✅ 익명함수</h4>\n<p>변수에 함수 코드를 저장하는 대신 함수명을 사용하지 않음 - 변수명을 함수명처럼 사용</p>\n<p><code class=\"language-text\">var/let/const 함수명 = function() { 구현로직 }</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 선언</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">myName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출</span>\n<span class=\"token function\">myName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hyem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>⚡ 함수 표현식에서 함수 이름을 사용하더라도 그 이름은 외부 코드에서 접근 불가능</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span>y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 7</span>\n<span class=\"token comment\">// console.log(sum(3,4));   => 접근불가</span></code></pre></div>\n<h2 id=\"2-다양한-함수들\" style=\"position:relative;\"><a href=\"#2-%EB%8B%A4%EC%96%91%ED%95%9C-%ED%95%A8%EC%88%98%EB%93%A4\" aria-label=\"2 다양한 함수들 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 다양한 함수들</h2>\n<h4>✅ 즉시실행함수</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이 함수는 호출 없이 즉시 실행됩니다\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>✅ 화살표함수</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 선언</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v1<span class=\"token punctuation\">,</span> v2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v1<span class=\"token operator\">+</span>v2<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 호출</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>✅ 콜백함수</h4>\n<p>함수를 명시적으로 호출하지 않고, <strong>특정 시점(사용자 action 발생 시점 = event)에 자동 호출</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// id=\"btn1\"인 버튼에 콜백함수 적용</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n<span class=\"token comment\">// 같은 코드</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> myFunc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </code></pre></div>\n<h1 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h1 id=\"3-객체\" style=\"position:relative;\"><a href=\"#3-%EA%B0%9D%EC%B2%B4\" aria-label=\"3 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 객체</h1>\n<h2 id=\"1-객체\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9D%EC%B2%B4\" aria-label=\"1 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 객체</h2>\n<h4>✅ 전역객체</h4>\n<ul>\n<li>window : 자바스크립트에서 갖는 최상위 전역 객체</li>\n<li>\n<p>window의 하위 객체</p>\n<ul>\n<li>document</li>\n<li>history</li>\n<li>location </li>\n<li>screen</li>\n</ul>\n</li>\n<li>전역객체는 코딩시에 생략 가능</li>\n<li><code class=\"language-text\">var</code> 키워드로 선언된 변수는 전역객체의 property로 등록됨</li>\n<li>\n<p>전역함수</p>\n<ul>\n<li>alert()</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h4>✅ JavaScript  표준 내장 객체</h4>\n<ul>\n<li>기초 객체 : Object, Function, Boolean, Symbol …</li>\n<li>오류 객체 : Error, …</li>\n<li>숫자 및 날짜 : Number, Math, Date … </li>\n<li>문자열 : String …</li>\n<li>인덱스 콜렉션 : Array …</li>\n<li>키 콜렉션 : Map, Set, …</li>\n<li>⭐<strong>JSON</strong></li>\n</ul>\n<h4>✅ 사용자가 직접 구성해서 생성</h4>\n<ul>\n<li>객체 리터럴</li>\n</ul>\n<p>객체 리터럴 생성하기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 변수(=property) : 값</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'bori'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">info</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// object</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined  왜지?? => 함수 내부에서 해당 객체의 변수값 활용시에는 this(객체 자체를 의미하는 키워드) 필수</span>\n\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name2<span class=\"token operator\">:</span> <span class=\"token string\">'ritae'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">info</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ritae 나옴</span>\n\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name3<span class=\"token operator\">:</span> <span class=\"token string\">'hyem'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">info</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'borimom'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hyem, return값으로 borimom 출력</span>\n\n<span class=\"token comment\">// 새로운 property 추가 및 값 대입, 삭제 가능</span>\nobj3<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> <span class=\"token string\">'seoul'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// seoul</span>\n\n<span class=\"token keyword\">delete</span> obj3<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span></code></pre></div>\n<h2 id=\"2-bom-dom\" style=\"position:relative;\"><a href=\"#2-bom-dom\" aria-label=\"2 bom dom permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) BOM DOM</h2>\n<h3 id=\"1-bom\" style=\"position:relative;\"><a href=\"#1-bom\" aria-label=\"1 bom permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) BOM</h3>\n<h3 id=\"2-dom\" style=\"position:relative;\"><a href=\"#2-dom\" aria-label=\"2 dom permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) DOM</h3>\n<p><strong>문서 객체 모델(Document Object Model)</strong></p>\n<p>브라우저 객체 모델(BOM, Browser Object Model)의 일부이다.</p>\n<p>HTML, XML 문서의 각 항목을 계층으로 표현하여 생성, 변형, 삭제할 수 있도록 하는 프로그래밍 인터페이스이다.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/DOM-model.svg/1200px-DOM-model.svg.png\" alt=\"문서 객체 모델 - 위키백과, 우리 모두의 백과사전\"></p>\n<p>[이미지 출처] <a href=\"https://ko.wikipedia.org/wiki/%EB%AC%B8%EC%84%9C_%EA%B0%9D%EC%B2%B4_%EB%AA%A8%EB%8D%B8\">위키백과</a></p>\n<ul>\n<li>내가 작성한 HTML 코드가 브라우저에 의해 파싱되면 DOM이 된다</li>\n<li>브라우저 개발자 툴에서 보이는 바로 그것이 DOM이다!</li>\n</ul>\n<h2 id=\"3-json\" style=\"position:relative;\"><a href=\"#3-json\" aria-label=\"3 json permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) JSON</h2>\n<p>json 주용도:</p>\n<p>서버와 클라이언트간에 전송되는 가장 인기있는 데이터 포맷</p>\n<p>왜냐면  key value로 명확하게 활용 가능하기 때문</p>\n<p>csv, tsv, txt 등등 포맷보다 훨씬 데이터 구분 명확, 활용 수월</p>\n<h1 id=\"4-자바스크립트-array-함수\" style=\"position:relative;\"><a href=\"#4-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-array-%ED%95%A8%EC%88%98\" aria-label=\"4 자바스크립트 array 함수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 자바스크립트 Array 함수</h1>\n<h3 id=\"map\" style=\"position:relative;\"><a href=\"#map\" aria-label=\"map permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>map</h3>\n<p>filter</p>\n<p>reduce</p>\n<p>createelement</p>\n<p>appendchild</p>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"349d95fa-81f6-5fea-9fa8-6e1edd51ceeb","excerpt":"쿠키의 문제 해결 웹스토리지 세션스토리지 테코톡 보고 정리하기…","html":"<p>쿠키의 문제 해결</p>\n<ol>\n<li>웹스토리지</li>\n<li>세션스토리지</li>\n</ol>\n<p>테코톡 보고 정리하기…</p>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"dfc05a22-1025-58bd-a32e-7ff23097edf3","excerpt":"mvvm pattern - 정제된 mvc 데이터 바인딩","html":"<p>mvvm pattern - 정제된 mvc</p>\n<p>데이터 바인딩</p>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"349b303f-a9b5-5f9d-8654-6acddbef6c52","excerpt":"실행단위 : cpu core…","html":"<p>실행단위 : cpu core에서 실행하는 하나의 단위</p>\n<ul>\n<li>프로세스</li>\n<li>스레드 둘다 포함</li>\n</ul>\n<p>프로세스 : 하나의 스레드만 가지고 있는 단일 스레드 프로세스</p>\n<p>프로그램이 프로세스가 되는것 : 실행이 되는 무언가로 되는것</p>\n<p><strong>프로세스</strong> : 프로그램이 실행된 것</p>\n<ul>\n<li>데이터가 메모리(코드, 데이터, 힙, 스택 영역) 에 올라감</li>\n<li>PCB 블럭이 만들어짐 (포인터, process state, PID … 등등의 정보)</li>\n</ul>\n<p>여러 프로세스 동시에 실행 : 각 프로세스가 아주 짧은 텀으로 교차되는것 (컨텍스트 스위칭)</p>\n<p>=> 너무 복잡</p>\n<p>=> 경량화된 프로세스인 ‘스레드’ 등장</p>\n<p>: 공유하는 자원이 있기 때문에 가능. => 캐싱 적중률 증가</p>\n<p><strong>스레드</strong> : 한 프로세스 내에서 나뉘어진 하나 이상의 실행 단위</p>\n<p>&#x3C;한 어플리케이션에 대한 여러 작업을 처리하는 방식></p>\n<ul>\n<li>\n<p>1 멀티프로세스</p>\n<ul>\n<li>한 프로세스를 포크해서 자식프로세스를 여러개 만들어서 처리</li>\n<li>자식프로세스는 부모와 별개의 메모리 영역 차지</li>\n<li>각 프로세스는 독립적이기 때문에 IPC를 사용해서 통신</li>\n<li>자원 소모적, 컨텍스트 스위칭 비용 큼</li>\n<li>동기화 작업 덜 신경써도 됨</li>\n</ul>\n</li>\n<li>\n<p>2 멀티스레드</p>\n<ul>\n<li>한 프로세스가 다수의 스레드로 구성되어 있음</li>\n<li>메모리효율적, 통신비용절감, </li>\n<li>동기화 신경써야함</li>\n</ul>\n</li>\n</ul>\n<p>멀티코어</p>\n<ul>\n<li>하드웨어의 측면.</li>\n<li>( ‘동시성’ : 여러 실행 단위를 빠른 텀으로 번갈아 실행하는 것 )</li>\n<li>병렬처리 : 물리적으로 여러 코어를 사용해서 다수의 실행단위를 동시에 실행하는 것</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"61e4d763-cd96-548f-8150-43ac3885a856","excerpt":"웹서버:  웹브라우저(클라이언트)로부터 HTTP 요청을 받아 HTML 문서와 같은 정적 컨텐츠를 제공하는 프로그램 동적 컨텐츠 요청을 받을시 Web Application Server(WAS)로 전달 WAS DB…","html":"<p>웹서버: </p>\n<p>웹브라우저(클라이언트)로부터 HTTP 요청을 받아 HTML 문서와 같은 정적 컨텐츠를 제공하는 프로그램</p>\n<p>동적 컨텐츠 요청을 받을시</p>\n<ul>\n<li>Web Application Server(WAS)로 전달</li>\n</ul>\n<p>WAS</p>\n<p>DB조회 등 다양한 로직 처리를 요구하는 동적 컨텐츠 제공</p>\n<p>동적컨텐츠 : 요청 인자에 따라 바뀔 수 있는 컨텐츠</p>\n<p>WAS만 사용하지 않고 웹서버와 함께 사용하는 이유</p>\n<ul>\n<li>정적 컨텐츠는 웹서버, 동적컨텐츠는 WAS가 담당 => 책임 분할을 통한 서버 부하 방지</li>\n<li>WAS의 로드밸런싱 기능 : 여러 WAS가 나눠서 처리하게 할수있음</li>\n<li>Health check 기능 : 서버에 주기적으로 HTTP 요청을 보내 서버의 상태를 확인</li>\n<li>보안 : 리버스 프록시를 통해 실제 서버를 외부에 노출하지 않을 수 있다</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"24ed503f-5246-5663-94c1-d127df278815","excerpt":"Your name Thank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"your-name\" style=\"position:relative;\"><a href=\"#your-name\" aria-label=\"your name permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}}]}},"pageContext":{}}}